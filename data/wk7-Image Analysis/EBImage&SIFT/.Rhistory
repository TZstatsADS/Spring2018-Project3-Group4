library(XML)
ann <- xmlParse("sample_annotation.xml")
print(ann)
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("EBImage")
install.packages("Momocs")
?coo.plot
library(Momocs)
?
?coo_plot
?coo.plot
source("http://bioconductor.org/biocLite.R")
biocLite()
library("EBImage")
img <- readImage("cat.jpg")
print(img)
load("zipcode.RData")
dat[1:5, 1:5]
display(img)
text(x = 20, y = 20, label = "Cat", adj = c(0,1), col = "orange", cex = 2)
options("EBImage.display"= "raster")
n_r <- n_c <- 16
vec <- dat[70,]
M <- matrix(vec, n_r, n_c)
MM <- M[,rev(1:ncol(M))]
par(mfrow=c(1,2))
image(x=1:n_r, y=1:n_c, z=M, axes = FALSE, xlab="", ylab="", col = grey(seq(0, 1, length = 256)))
image(x=1:n_r, y=1:n_c, z=MM, axes = FALSE, xlab="", ylab="", col = grey(seq(0, 1, length = 256)))
par(mfrow=c(1,1))
img_zip <- Image(vec, dim=c(16, 16))
display(img_zip)
str(img)
dim(img)
imageData(img)[1:3, 1:6,]
hist(img)
img_small <- resize(img, 128, 128)
display(img_small)
img_dog <- readImage("dog.jpg")
img_dog <- resize(img_dog, 128, 128)
img_all <- EBImage::combine(img_small, img_dog)
display(img_all, all=TRUE)
img_all2 <- EBImage::combine(img_small, flip(img_small), flop(img_small))
display(img_all2, all=TRUE)
img_bright <- img + 0.2
img_dark <- img - 0.2
display(combine(img_bright, img_dark), all=TRUE)
img_low <- img * 0.5
img_high <- img * 2
display(combine(img_low, img_high), all=TRUE)
display(img[300:450, 50:200,])
img_rotate <- translate(rotate(img, 45), c(50, 0))
display(img_rotate)
display(channel(img, mode='gray'))
display(channel(img, mode='luminance'))
display(channel(img_zip, mode='asred'))
w <- makeBrush(size = 31, shape = 'gaussian', sigma = 5)
plot(w[(nrow(w)+1)/2, ], ylab = "w", xlab = "", cex = 0.7)
img_flo <- filter2(img, w)
display(img_flo)
f_low <- makeBrush(21, shape='disc', step=FALSE)
display(f_low, title='Disc filter')
f_low <- f_low/sum(f_low)
img_lowPass <- filter2(img, filter=f_low)
display(img_lowPass, title='Filtered image')
f_high <- matrix(1, nc=3, nr=3)
f_high[2,2] <- -8
img_highPass <- filter2(img, f_high)
display(img_highPass, title='Filtered image')
img_lena <- readImage("lena_noisy.png")
img_medianFlt_2 <- medianFilter(img_lena, size=2)
img_medianFlt_5 <- medianFilter(img_lena, size=5)
img_c <- combine(img_lena, img_medianFlt_2, img_medianFlt_5)
display(img_c, all=TRUE)
img_bengal <- readImage("Bengal_1.jpg")
display(img_bengal)
img_bengal_bw <- channel(img_bengal, mode="gray")
img_seg1 <- thresh(img_bengal_bw, w=60, h=60, offset=0.06) # {f = matrix(1, nc=2*w+1, nr=2*h+1) ; f=f/sum(f) ; x>(filter2(x, f)+offset)}
img_seg2 <- opening(img_seg1, kern=makeBrush(11, shape='disc'))
img_seg3 <- opening(img_seg1, kern=makeBrush(5, shape='disc'))
img_seg <- combine(img_seg1, img_seg2, img_seg3)
display(img_seg, all=TRUE)
img_leaf <- readImage("leaf.png")
img_leaf <- resize(img_leaf, 128, 128)
img_leaf <- channel(img_leaf, mode="gray")
img_leaf1 <- thresh(img_leaf, w=50, h=50, offset=0.05)
display(combine(img_leaf,img_leaf1), all=TRUE)
oc <- ocontour(bwlabel(img_leaf1))
plot(oc[[1]], type='l')
points(oc[[1]], col=2)
print(head(oc[[1]]))
img_bengal <- readImage("Bengal_1.jpg")
img_bengal_bw <- channel(img_bengal, mode="gray")
img_seg1 <- thresh(img_bengal_bw, w=60, h=60, offset=0.06)
img_seg2 <- dilate(img_seg1, kern=makeBrush(25, shape='gaussian'))
img_fill <- fillHull(img_seg2)
oc_bengal <- ocontour(bwlabel(img_fill))
plot(oc_bengal[[1]], type="l")
lc <- localCurvature(x=oc[[1]], h=11)
print(head(lc$curvature))
i <- lc$curvature >= 0
neg <- array(0, dim(img_leaf1))
pos <- neg
pos[lc$contour[i,]+1]  <- lc$curvature[i]
neg[lc$contour[!i,]+1] <- -lc$curvature[!i]
display(10*(rgbImage(pos, , neg)), title = "Image curvature")
library(Momocs)
coo_leaf <- Coo(oc[[1]])
coo_plot(coo_leaf[1]) #plot a simple wrapper for plotting shapes
l = length(img)
n = l/10
pixels = sample(l, n)
img_noisy = img
img_noisy[pixels] = runif(n, min=0, max=1)
display(img_noisy)
l = length(img)
n = l/10
pixels = sample(l, n)
img_noisy = img
img_noisy[pixels] = runif(n, min=0, max=1)
display(img_noisy)
img_median = medianFilter(img_noisy, 1)
display(img_median)
source("http://bioconductor.org/biocLite.R")
biocLite()
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("EBImage")
library("EBImage")
img <- readImage("chicken.jpg")
print(img)
load("zipcode.RData")
dat[1:5, 1:5]
display(img)
text(x = 20, y = 20, label = "chicken", adj = c(0,1), col = "orange", cex = 2)
options("EBImage.display"= "raster")
n_r <- n_c <- 16
vec <- dat[70,]
M <- matrix(vec, n_r, n_c)
MM <- M[,rev(1:ncol(M))]
par(mfrow=c(1,2))
image(x=1:n_r, y=1:n_c, z=M, axes = FALSE, xlab="", ylab="", col = grey(seq(0, 1, length = 256)))
image(x=1:n_r, y=1:n_c, z=MM, axes = FALSE, xlab="", ylab="", col = grey(seq(0, 1, length = 256)))
par(mfrow=c(1,1))
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("EBImage")
library("EBImage")
img <- readImage("chicken.jpg")
print(img)
load("zipcode.RData")
dat[1:5, 1:5]
display(img)
text(x = 20, y = 20, label = "chicken", adj = c(0,1), col = "orange", cex = 2)
?text
display(img)
text(x = 20, y = 20, labels = "chicken", adj = c(0,1), col = "orange", cex = 2)
display(img)
display(img)
options("EBImage.display"= "raster")
n_r <- n_c <- 16
vec <- dat[70,]
M <- matrix(vec, n_r, n_c)
MM <- M[,rev(1:ncol(M))]
par(mfrow=c(1,2))
image(x=1:n_r, y=1:n_c, z=M, axes = FALSE, xlab="", ylab="", col = grey(seq(0, 1, length = 256)))
image(x=1:n_r, y=1:n_c, z=MM, axes = FALSE, xlab="", ylab="", col = grey(seq(0, 1, length = 256)))
par(mfrow=c(1,1))
img_zip <- Image(vec, dim=c(16, 16))
display(img_zip)
str(img)
dim(img)
imageData(img)[1:3, 1:6,]
hist(img)
img_small <- resize(img, 128, 128)
display(img_small)
img_dog <- readImage("dog.jpg")
img_dog <- resize(img_dog, 128, 128)
img_all <- EBImage::combine(img_small, img_dog)
display(img_all, all=TRUE)
img_all2 <- EBImage::combine(img_small, flip(img_small), flop(img_small))
display(img_all2, all=TRUE)
img_bright <- img + 0.2
img_dark <- img - 0.2
display(combine(img_bright, img_dark), all=TRUE)
img_low <- img * 0.5
img_high <- img * 2
display(combine(img_low, img_high), all=TRUE)
display(img[300:450, 50:200,])
img_rotate <- translate(rotate(img, 45), c(50, 0))
display(img_rotate)
display(channel(img, mode='gray'))
display(channel(img, mode='luminance'))
display(channel(img_zip, mode='asred'))
w <- makeBrush(size = 31, shape = 'gaussian', sigma = 5)
plot(w[(nrow(w)+1)/2, ], ylab = "w", xlab = "", cex = 0.7)
img_flo <- filter2(img, w)
display(img_flo)
f_low <- makeBrush(21, shape='disc', step=FALSE)
display(f_low, title='Disc filter')
f_low <- f_low/sum(f_low)
img_lowPass <- filter2(img, filter=f_low)
display(img_lowPass, title='Filtered image')
f_high <- matrix(1, nc=3, nr=3)
f_high[2,2] <- -8
img_highPass <- filter2(img, f_high)
display(img_highPass, title='Filtered image')
l = length(img)
n = l/10
pixels = sample(l, n)
img_noisy = img
img_noisy[pixels] = runif(n, min=0, max=0.5)
display(img_noisy)
img_median = medianFilter(img_noisy, 1)
display(img_median)
display(img_median)
#img_median = medianFilter(img_noisy, 1)
display(img_median)
img_bengal <- readImage("Bengal_1.jpg")
display(img_bengal)
img_bengal_bw <- channel(img_bengal, mode="gray")
img_seg1 <- thresh(img_bengal_bw, w=60, h=60, offset=0.06) # {f = matrix(1, nc=2*w+1, nr=2*h+1) ; f=f/sum(f) ; x>(filter2(x, f)+offset)}
img_seg2 <- opening(img_seg1, kern=makeBrush(11, shape='disc'))
img_seg3 <- opening(img_seg1, kern=makeBrush(5, shape='disc'))
img_seg <- combine(img_seg1, img_seg2, img_seg3)
display(img_seg, all=TRUE)
img_leaf <- readImage("leaf.png")
img_leaf <- resize(img_leaf, 128, 128)
img_leaf <- channel(img_leaf, mode="gray")
img_leaf1 <- thresh(img_leaf, w=50, h=50, offset=0.05)
display(combine(img_leaf,img_leaf1), all=TRUE)
oc <- ocontour(bwlabel(img_leaf1))
plot(oc[[1]], type='l')
points(oc[[1]], col=2)
print(head(oc[[1]]))
img_median = medianFilter(img_noisy, 1)
display(img_median)
